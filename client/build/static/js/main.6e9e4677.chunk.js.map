{"version":3,"sources":["routing.js","components/Form.js","components/ContactItem.js","components/Filter.js","components/Admin.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["config","headers","postContact","contact","a","console","log","Axios","post","res","status","M","toast","html","error","message","getContacts","fetch","method","json","contacts","length","getDatalist","uniqueDataList","i","includes","meeting","push","Form","setAdmin","useState","name","setName","phone","setPhone","sponsor","setSponsor","setMeeting","className","style","width","marginTop","id","paddingRight","type","value","onChange","e","target","htmlFor","paddingLeft","disabled","checked","display","onClick","ph","numArr","concat","Number","validateNumber","newContact","ContactItem","fontSize","Filter","dataList","setFiltered","padding","placeholder","list","v","regex","RegExp","f","filter","match","for","map","item","key","Admin","loading","setLoading","filtered","setContacts","useEffect","gotContacts","get","output","margin","marginBottom","_id","Navbar","href","App","AutoInit","admin","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"uQAGMA,EAAS,CACbC,QAAS,CACP,eAAgB,qBAgBPC,EAAW,uCAAG,WAAMC,GAAN,eAAAC,EAAA,6DACzBC,QAAQC,IAAI,WADa,kBAGLC,IAAMC,KAAK,QAASL,EAASH,GAHxB,OAGjBS,EAHiB,OAKvBJ,QAAQC,IAAIG,GACO,MAAfA,EAAIC,OACNC,IAAEC,MAAM,CACNC,KAAK,8DAEiB,MAAfJ,EAAIC,QACbC,IAAEC,MAAM,CACNC,KAAM,mCAZa,gDAgBvBF,IAAEC,MAAM,CACNC,KAAM,mCAERR,QAAQS,MAAM,KAAMC,SAnBG,yDAAH,sDAuBXC,EAAW,uCAAG,8BAAAZ,EAAA,6DACzBC,QAAQC,IAAI,sBADa,SAEPW,MAAM,QAAS,CAC/BC,OAAQ,MACRjB,QAAS,CACP,eAAgB,sBALK,cAEnBQ,EAFmB,gBAQFA,EAAIU,OARF,cAQnBC,EARmB,OASzBf,QAAQC,IAAIc,GACZf,QAAQC,IAAIc,EAASC,QAVI,kBAWlBD,GAXkB,4CAAH,qDAaXE,EAAc,SAAAF,GAEzB,IADA,IAAIG,EAAiB,GACZC,EAAI,EAAGA,EAAIJ,EAASC,OAAQG,KACkB,IAAjDD,EAAeE,SAASL,EAASI,GAAGE,UACtCH,EAAeI,KAAKP,EAASI,GAAGE,SAGpC,OAAOH,GC6CMK,EAzGF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACLC,mBAAS,IADJ,mBACtBC,EADsB,KAChBC,EADgB,OAEHF,mBAAS,IAFN,mBAEtBG,EAFsB,KAEfC,EAFe,OAGCJ,oBAAS,GAHV,mBAGtBK,EAHsB,KAGbC,EAHa,OAICN,mBAAS,SAJV,mBAItBJ,EAJsB,KAIbW,EAJa,KA6B7B,OACE,yBAAKC,UAAU,YAAYC,MAAO,CAAEC,MAAO,MAAOC,UAAW,SAC3D,0BAAMH,UAAU,UAAUI,GAAG,YAC3B,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,sBAAsBC,MAAO,CAAEI,aAAc,SAC1D,uBAAGL,UAAU,yBAAb,kBACA,2BACEI,GAAG,OACHE,KAAK,OACLC,MAAOd,EACPO,UAAU,WACVQ,SAAU,SAAAC,GAAC,OAAIf,EAAQe,EAAEC,OAAOH,UAElC,2BAAOI,QAAQ,QAAf,SAEF,yBAAKX,UAAU,sBAAsBC,MAAO,CAAEI,aAAc,SAC1D,uBAAGL,UAAU,yBAAb,SACA,2BACEI,GAAG,QACHE,KAAK,OACLC,MAAOZ,EACPK,UAAU,WACVQ,SAAU,SAAAC,GAAC,OAAIb,EAASa,EAAEC,OAAOH,UAEnC,2BAAOI,QAAQ,SAAf,cAEF,yBACEX,UAAU,sBACVC,MAAO,CAAEI,aAAc,OAAQO,YAAa,SAE5C,4BACER,GAAG,UACHG,MAAOnB,EACPoB,SAAU,SAAAC,GAAC,OAAIV,EAAWU,EAAEC,OAAOH,SAEnC,4BAAQA,MAAM,QAAQM,UAAQ,GAA9B,kBAGA,4BAAQN,MAAM,OAAd,OACA,4BAAQA,MAAM,cAAd,uBACA,4BAAQA,MAAM,gBAAd,mBAGJ,uBAAGP,UAAU,wBACX,2BAAOW,QAAQ,WACb,2BACEL,KAAK,WACLF,GAAG,UACHG,MAAOV,EACPW,SAAU,SAAAC,GAAC,OAAIX,GAAYD,IAC3BiB,QAASjB,IAEX,oDAIJ,4BACEG,UAAU,+BACVI,GAAG,YACHH,MAAO,CACLc,QAAS,eACTb,MAAO,OACPC,UAAW,QAEbG,KAAK,SACLb,KAAK,SACLuB,QAzFO,WACf,GAAa,WAATvB,EAGF,OAFA1B,QAAQC,IAAI,yBACZuB,GAAS,GAEJ,GAAgB,UAAZH,EAAJ,CAIP,IAAM6B,EDVoB,SAAAtB,GAI5B,IAHA,IAAIsB,EAAK,GAELC,EAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAClDhC,EAAI,EAAGA,EAAIS,EAAMZ,OAAQG,IAC5BgC,EAAO/B,SAASQ,EAAMT,MACxB+B,EAAKA,EAAGE,OAAOxB,EAAMT,KAIzB,OADAS,EAAQyB,OAAOH,GCCFI,CAAe1B,GACtB2B,EAAa,CACf7B,KAAMA,EACNE,MAAOsB,EACPpB,QAASA,EACTT,QAASA,GAEXrB,QAAQC,IAAR,eAAiBsD,IACjB1D,EAAY0D,GACZ5B,EAAQ,IACRE,EAAS,IACTE,GAAW,GACXC,EAAW,cAfT1B,IAAEC,MAAM,CAAEC,KAAM,0BAyEZ,cCxEKgD,EAfK,SAAC,GAAiB,IAAf1D,EAAc,EAAdA,QACrB,OACE,wBAAImC,UAAU,mBACZ,8BAAOnC,EAAQ4B,MACf,6BACA,0BAAMQ,MAAO,CAAEW,YAAa,SAAW/C,EAAQ8B,OAC9C9B,EAAQgC,QACP,uBAAGG,UAAU,mCAAb,gBAEA,0BAAMC,MAAO,CAAEuB,SAAU,SAAzB,OCsBOC,EA/BA,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,YAAa7C,EAAe,EAAfA,SAAe,EAC1BU,mBAAS,IADiB,6BAYtD,OACE,0BAAMQ,UAAU,UAAUC,MAAO,CAAE2B,QAAS,SAC1C,2BACEtB,KAAK,OACLF,GAAG,SACHyB,YAAY,oBACZC,KAAK,cACLtB,SAhBW,SAAAC,GAEf,IAAIsB,EAAItB,EAAEC,OAAOH,MACXyB,EAAQ,IAAIC,OAAOF,EAAG,MACxBG,EAAIpD,EAASqD,QAAO,SAAAtE,GAAO,OAAIA,EAAQuB,QAAQgD,MAAMJ,MACzDL,EAAYO,GACZnE,QAAQC,IAAIkE,MAYV,2BAAOG,IAAI,UAAX,qBACA,8BAAUjC,GAAG,eACVsB,EAASY,KAAI,SAACC,EAAMC,GAAP,OACZ,4BAAQA,IAAKA,EAAKjC,MAAOgC,UC6BpBE,EAlDD,WAAO,IAAD,EACYjD,oBAAS,GADrB,mBACXkD,EADW,KACFC,EADE,OAEcnD,mBAAS,MAFvB,mBAEXoD,EAFW,KAEDjB,EAFC,OAGcnC,mBAAS,MAHvB,mBAGXV,EAHW,KAGD+D,EAHC,KAKdnB,EAAW,GACfoB,qBAAU,WACRH,GAAW,GACF,uCAAG,4BAAA7E,EAAA,sEACgBY,IADhB,OACJqE,EADI,OAEVF,EAAYE,GAFF,2CAAH,oDAITC,GACAL,GAAW,KAEV,IACH,IAAIM,EAAS,GAYb,OAXiB,OAAbL,GACFK,EAASL,EACT7E,QAAQC,IAAR,eAAiBiF,MAEjBA,EAASnE,EACTf,QAAQC,IAAR,eAAiBiF,KAEF,OAAbnE,IAAiC,IAAZ4D,IACvBhB,EAAW1C,EAAYF,GACvBf,QAAQC,IAAIgB,EAAYF,KAGxB,kBAAC,WAAD,KACE,kBAAC,EAAD,CACE4C,SAAUA,EACVC,YAAaA,EACb7C,SAAUA,IAEZ,wBACEkB,UAAU,aACVC,MAAO,CAAEC,MAAO,MAAOgD,OAAQ,OAAQC,aAAc,SAErD,wBAAInD,UAAU,UAAd,wBACc,OAAblB,EACGmE,EAAOX,KAAI,SAAAzE,GAAO,OAChB,kBAAC,EAAD,CAAaA,QAASA,EAAS2E,IAAK3E,EAAQuF,SAE9C,MCjCGC,EAdA,WACb,OACE,kBAAC,WAAD,KACE,6BACE,yBAAKrD,UAAU,8BACb,uBAAGsD,KAAK,KAAKtD,UAAU,qBAAvB,iBCcKuD,MAdf,WACET,qBAAU,WACRzE,IAAEmF,aACD,IAHU,MAIahE,oBAAS,GAJtB,mBAINiE,EAJM,KAIClE,EAJD,KAMb,OACE,yBAAKS,UAAU,OACb,kBAAC,EAAD,MACCyD,EAAQ,kBAAC,EAAD,MAAY,kBAAC,EAAD,CAAMlE,SAAUA,MCJvBmE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASzB,MACvB,2DCZN0B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAhG,GACLT,QAAQS,MAAMA,EAAMC,c","file":"static/js/main.6e9e4677.chunk.js","sourcesContent":["import M from \"materialize-css/dist/js/materialize.min\";\nimport Axios from \"axios\";\n\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n};\n\nexport const validateNumber = phone => {\n  let ph = \"\";\n\n  let numArr = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n  for (var i = 0; i < phone.length; i++) {\n    if (numArr.includes(phone[i])) {\n      ph = ph.concat(phone[i]);\n    }\n  }\n  phone = Number(ph);\n  return phone;\n};\nexport const postContact = async contact => {\n  console.log(\"posting\");\n  try {\n    const res = await Axios.post(\"/list\", contact, config);\n\n    console.log(res);\n    if (res.status === 200) {\n      M.toast({\n        html: `Thank you, you were successfully added to the phone list.`\n      });\n    } else if (res.status === 500) {\n      M.toast({\n        html: \"Ah shit. Something went wrong.\"\n      });\n    }\n  } catch (error) {\n    M.toast({\n      html: \"Ah shit. Something went wrong.\"\n    });\n    console.error(error.message);\n  }\n};\n\nexport const getContacts = async () => {\n  console.log(\"getContacts called\");\n  const res = await fetch(\"/list\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const contacts = await res.json();\n  console.log(contacts);\n  console.log(contacts.length);\n  return contacts;\n};\nexport const getDatalist = contacts => {\n  let uniqueDataList = [];\n  for (var i = 0; i < contacts.length; i++) {\n    if (uniqueDataList.includes(contacts[i].meeting) === false) {\n      uniqueDataList.push(contacts[i].meeting);\n    }\n  }\n  return uniqueDataList;\n};\n","import React, { useState } from \"react\";\nimport M from \"materialize-css/dist/js/materialize.min\";\nimport { validateNumber, postContact } from \"../routing\";\n\nconst Form = ({ setAdmin }) => {\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [sponsor, setSponsor] = useState(false);\n  const [meeting, setMeeting] = useState(\"which\");\n\n  const onSubmit = () => {\n    if (name === \"Showme\") {\n      console.log(\"Registered Admin\");\n      setAdmin(true);\n      return;\n    } else if (meeting === \"which\") {\n      M.toast({ html: \"Pick a meeting bro.\" });\n      return;\n    }\n    const ph = validateNumber(phone);\n    let newContact = {\n      name: name,\n      phone: ph,\n      sponsor: sponsor,\n      meeting: meeting\n    };\n    console.log({ ...newContact });\n    postContact(newContact);\n    setName(\"\");\n    setPhone(\"\");\n    setSponsor(false);\n    setMeeting(\"which\");\n  };\n  return (\n    <div className=\"container\" style={{ width: \"80%\", marginTop: \"80px\" }}>\n      <form className=\"col s12\" id=\"UserForm\">\n        <div className=\"row\">\n          <div className=\"input-field col s12\" style={{ paddingRight: \"50px\" }}>\n            <i className=\"material-icons prefix\">account_circle</i>\n            <input\n              id=\"name\"\n              type=\"text\"\n              value={name}\n              className=\"validate\"\n              onChange={e => setName(e.target.value)}\n            />\n            <label htmlFor=\"name\">Name</label>\n          </div>\n          <div className=\"input-field col s12\" style={{ paddingRight: \"50px\" }}>\n            <i className=\"material-icons prefix\">phone</i>\n            <input\n              id=\"phone\"\n              type=\"text\"\n              value={phone}\n              className=\"validate\"\n              onChange={e => setPhone(e.target.value)}\n            />\n            <label htmlFor=\"phone\">Telephone</label>\n          </div>\n          <div\n            className=\"input-field col s12\"\n            style={{ paddingRight: \"50px\", paddingLeft: \"50px\" }}\n          >\n            <select\n              id=\"meeting\"\n              value={meeting}\n              onChange={e => setMeeting(e.target.value)}\n            >\n              <option value=\"which\" disabled>\n                Which meeting?\n              </option>\n              <option value=\"SNS\">SNS</option>\n              <option value=\"Commitment\">Thursday Commitment</option>\n              <option value=\"YoungPeoples\">Young Peoples</option>\n            </select>\n          </div>\n          <p className=\"col s12 center-align\">\n            <label htmlFor=\"sponsor\">\n              <input\n                type=\"checkbox\"\n                id=\"sponsor\"\n                value={sponsor}\n                onChange={e => setSponsor(!sponsor)}\n                checked={sponsor}\n              />\n              <span>Can you sponsor?</span>\n            </label>\n          </p>\n\n          <button\n            className=\"btn waves-effect waves-light\"\n            id=\"submitBtn\"\n            style={{\n              display: \"inline-block\",\n              width: \"100%\",\n              marginTop: \"20px\"\n            }}\n            type=\"submit\"\n            name=\"submit\"\n            onClick={onSubmit}\n          >\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst ContactItem = ({ contact }) => {\n  return (\n    <li className=\"collection-item\">\n      <span>{contact.name}</span>\n      <br />\n      <span style={{ paddingLeft: \"20px\" }}>{contact.phone}</span>\n      {contact.sponsor ? (\n        <i className=\"material-icons right green-text\">check_circle</i>\n      ) : (\n        <span style={{ fontSize: \"2rem\" }}> </span>\n      )}\n    </li>\n  );\n};\n\nexport default ContactItem;\n","import React, { useState } from \"react\";\n\nconst Filter = ({ dataList, setFiltered, contacts }) => {\n  const [search, setSearch] = useState(\"\");\n\n  const onChange = e => {\n    // setSearch(e.target.value);\n    let v = e.target.value;\n    const regex = new RegExp(v, \"gi\");\n    let f = contacts.filter(contact => contact.meeting.match(regex));\n    setFiltered(f);\n    console.log(f);\n  };\n\n  return (\n    <form className=\"col s12\" style={{ padding: \"30px\" }}>\n      <input\n        type=\"text\"\n        id=\"filter\"\n        placeholder=\"Filter By Meeting\"\n        list=\"meetingList\"\n        onChange={onChange}\n      />\n      <label for=\"filter\">Filter By Meeting</label>\n      <datalist id=\"meetingList\">\n        {dataList.map((item, key) => (\n          <option key={key} value={item} />\n        ))}\n      </datalist>\n    </form>\n  );\n};\n\nexport default Filter;\n","import React, { useEffect, useState, Fragment } from \"react\";\nimport ContactItem from \"./ContactItem\";\nimport Filter from \"./Filter\";\nimport { getContacts, getDatalist } from \"../routing\";\n\nconst Admin = () => {\n  const [loading, setLoading] = useState(false);\n  const [filtered, setFiltered] = useState(null);\n  const [contacts, setContacts] = useState(null);\n\n  let dataList = [];\n  useEffect(() => {\n    setLoading(true);\n    const get = async () => {\n      const gotContacts = await getContacts();\n      setContacts(gotContacts);\n    };\n    get();\n    setLoading(false);\n    // es-lint-disable-next-line\n  }, []);\n  let output = [];\n  if (filtered !== null) {\n    output = filtered;\n    console.log({ ...output });\n  } else {\n    output = contacts;\n    console.log({ ...output });\n  }\n  if (contacts !== null && loading === false) {\n    dataList = getDatalist(contacts);\n    console.log(getDatalist(contacts));\n  }\n  return (\n    <Fragment>\n      <Filter\n        dataList={dataList}\n        setFiltered={setFiltered}\n        contacts={contacts}\n      />\n      <ul\n        className=\"collection\"\n        style={{ width: \"80%\", margin: \"auto\", marginBottom: \"20px\" }}\n      >\n        <h5 className=\"center\">Milwaukee Phone List</h5>\n        {contacts !== null\n          ? output.map(contact => (\n              <ContactItem contact={contact} key={contact._id} />\n            ))\n          : \"\"}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default Admin;\n","import React, { Fragment } from \"react\";\n\nconst Navbar = () => {\n  return (\n    <Fragment>\n      <nav>\n        <div className=\"nav-wrapper teal lighten-1\">\n          <a href=\"#!\" className=\"brand-logo center\">\n            MKE #List\n          </a>\n        </div>\n      </nav>\n    </Fragment>\n  );\n};\n\nexport default Navbar;\n","import React, { useEffect, useState } from \"react\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min\";\nimport Form from \"./components/Form\";\nimport Admin from \"./components/Admin\";\nimport Navbar from \"./components/Navbar\";\n\nfunction App() {\n  useEffect(() => {\n    M.AutoInit();\n  }, []);\n  const [admin, setAdmin] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      {admin ? <Admin /> : <Form setAdmin={setAdmin} />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}